@model PagedList.IPagedList<Ecartcommande_cheque.Models.ecart_reglement>
@using PagedList.Mvc

<br />
<br />
<br />


<div class="row justify-content-around">
    <div class="col-6">
        @using (Html.BeginForm("Index", "Home", FormMethod.Get))
        {
            <label style="color : darkgreen">Recherche à partir du numéro client :</label>
            <br/>

            <div class="form-inline">
            <input type="text" id="numeroclient" name="numeroclient" placeholder=" Numéro client" style="width:10em;" class="form-control" />
            <input type="submit" value="Rechercher" class="btn btn-success" />
            </div>
        }
    </div>

    <div class="col-6">
        @using (Html.BeginForm("Index", "Home", FormMethod.Get))
        {
            <label style="color : darkgreen">Recherche à partir du numéro Oxatis :</label>
            <br/>
            <div class="form-inline">

            <input type="text" id="numerocommande" name="numeroOxatis" placeholder=" Numéro Oxatis" style="width:10em;" class="form-control" />
            <input type="submit" value="Rechercher" class="btn btn-success"/>
            </div>
        }





    </div>
</div>

<br />
<br />

<div class="container">
    <div class="row">
        <div class="col-xs-6">
            <span class="text-info">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) sur @Model.PageCount</span>
            @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, currentFilter = ViewBag.CurrentFilter }))
        </div>
    </div>
</div>



<table class="table table-striped table-hover">
    <tr style=" color : darkgreen">
        <th>
            Type de vente
        </th>
        <th>
            Date
        </th>
        <th>
            N° client
        </th>
        <th>
            N° commande
        </th>
        <th>
            Mode de paiement
        </th>
        <th>
            N° Oxatis
        </th>
        <th>
            TTC Cmde
        </th>
        <th>
            TTC Paiement
        </th>
        <th>
            <a style="color : darkgreen" href="@Url.Action("Index", "Home", new { sortOrder = ViewBag.EcartSort })">Ecart</a>
        </th>
        <th>

        </th>
    </tr>

    @foreach (var item in Model)
    {




    <tr>
        <td style="cursor: pointer;" onclick="window.open('http://rc.willemsefrance.fr/fiche_clients?client_num=@item.ER_Tiers', '_blank');">
            @Html.DisplayFor(modelItem => item.ER_CA_NUM)
        </td>

        <td style="cursor: pointer;" onclick="window.open('http://rc.willemsefrance.fr/fiche_clients?client_num=@item.ER_Tiers', '_blank');">
            @{
                string parameterValue = item.ER_date_piece.ToString().Remove(10, 9);
            }
            @Html.DisplayFor(modelItem => parameterValue)
        </td>
        <td style="cursor: pointer;" onclick="window.open('http://rc.willemsefrance.fr/fiche_clients?client_num=@item.ER_Tiers', '_blank');">
            @*data-toggle="popover" data-trigger="hover" data-content="@item.ER_Tiers" title="13" data-html="true" class=""*@
            @Html.DisplayFor(modelItem => item.ER_Tiers)
        </td>
        <td style="cursor: pointer;" onclick="window.open('http://rc.willemsefrance.fr/detail_commandes?client_num=@item.ER_Tiers&do_piece=@item.ER_piece&do_type=1', '_blank');">
            @Html.DisplayFor(modelItem => item.ER_piece)
        </td>
        <td style="cursor: pointer;" onclick="window.open('http://rc.willemsefrance.fr/fiche_clients?client_num=@item.ER_Tiers', '_blank');">
            @Html.DisplayFor(modelItem => item.ER_Mode_paiement)

        </td>
        <td style="cursor: pointer;" onclick="window.open('http://rc.willemsefrance.fr/fiche_clients?client_num=@item.ER_Tiers', '_blank');">
            @Html.DisplayFor(modelItem => item.ER_Oxatis)

        </td>
        <td style="cursor: pointer;" onclick="window.open('http://rc.willemsefrance.fr/fiche_clients?client_num=@item.ER_Tiers', '_blank');">
            @Html.DisplayFor(modelItem => item.ER_TTC_piece)
        </td>
        <td style="cursor: pointer;" onclick="window.open('http://rc.willemsefrance.fr/fiche_clients?client_num=@item.ER_Tiers', '_blank');">
            @Html.DisplayFor(modelItem => item.ER_TTC_paiement)
        </td>
        <td style="cursor: pointer;" onclick="window.open('http://rc.willemsefrance.fr/fiche_clients?client_num=@item.ER_Tiers', '_blank');">
            @Html.DisplayFor(modelItem => item.ER_ecart)
        </td>
        <td style="background-color: white; border : unset;" class="">
            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#clotureModal" data-titre="Commande numéro @item.ER_piece" data-numcommande="@item.ER_piece">Clôturer</button>
        </td>    
    </tr>

    }

</table>

<div class="modal fade" id="clotureModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="modal-titre"></h5>    
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    @using (Html.BeginForm("ActionCloturer", "Home", FormMethod.Post))
                    {
                        <input type="hidden" name="numcommande" id="modal-numcommande" />
                        <label for="Commentaire">Commentaire :</label>
                        <textarea class="form-control" name="commentaire"></textarea>
                        <small id="commentaireHelp" class="form-text text-muted">(Facultatif)</small>

                        <input type="submit" value="Cloturer" class="btn btn-success" />
                    }

                </div>
            </div>
                <div class="modal-footer">
            </div>
        </div>
    </div>
</div>


<hr />
<div class="container">
    <div class="row">
        <div class="col-xs-6">
            <span class="text-info">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) sur @Model.PageCount</span>
            @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, currentFilter = ViewBag.CurrentFilter }))
        </div>
    </div>
</div>


<script>

    $(document).ready(function () {
        $('[data-toggle="popover"]').popover({
        })
    });

    // data-* attributes to scan when populating modal values
    var ATTRIBUTES = ['titre', 'numcommande'];

    $('[data-toggle="modal"]').on('click', function (e) {
        // convert target (e.g. the button) to jquery object
        var $target = $(e.target);
        // modal targeted by the button
        var modalSelector = $target.data('target');

        // iterate over each possible data-* attribute
        ATTRIBUTES.forEach(function (attributeName) {
            // retrieve the dom element corresponding to current attribute
            var $modalAttribute = $(modalSelector + ' #modal-' + attributeName);
            var dataValue = $target.data(attributeName);

            // if the attribute value is empty, $target.data() will return undefined.
            // In JS boolean expressions return operands and are not coerced into
            // booleans. That way is dataValue is undefined, the left part of the following
            // Boolean expression evaluate to false and the empty string will be returned
            $modalAttribute.text(dataValue || '');
            $modalAttribute.val(dataValue || '');
        });
    });

</script>

