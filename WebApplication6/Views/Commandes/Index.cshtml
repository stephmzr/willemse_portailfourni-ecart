@model PagedList.IPagedList<WebApplication6.Models.F_DOCENTETE>
@using PagedList.Mvc
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Votre suivi de Commandes";
}

<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.6/umd/popper.min.js"></script>
</head>

<div class="container">
    <h2 style="color:darkgreen;">@ViewBag.Title</h2>
    <br /><br />
    @if (Model.Count() == 0)
    {
        <p class="text-danger">Aucune commande enregistrée.</p>
    }
    else
    {
        <div class="row">
            <div class="col-xs-3 form-inline">
                @using (Html.BeginForm("Index", "Commandes", FormMethod.Get))
                {
                    <label>Trouver un produit:</label><br />
                    <input type="text" id="pro" name="pro" placeholder="Code produit" style="width:10em;" class="from-control" />
                    <input type="submit" value="Rechercher" class="btn btn-success active" />
                }
            </div>

            <div class="col-xs-3 form-inline">
                @using (Html.BeginForm("Index", "Commandes", FormMethod.Get))
                {
                    <label>Commandes à partir d'une date:</label><br />
                    <input type="date" id="datecm" name="datecm" placeholder="aaaa-mm-jj" style="width:10em;" class="from-control" />
                    <input type="submit" value="Rechercher" class="btn btn-success active" />
                }
            </div>

        </div>
        <br /><br />

        <table class="table table-striped table-hover list-group">
            <tr style="color:darkgreen">
                <th>
                    &nbsp;
                </th>
                <th>
                    N° commande
                </th>
                <th>
                    Date de la commande
                </th>
                <th>
                    Date expédition
                </th>
                <th>
                    Montant HT
                </th>
                <th>
                    &nbsp;
                </th>
                <th>
                    &nbsp;
                </th>
                <th>
                    &nbsp;
                </th>
                <th>
                    &nbsp;
                </th>
            </tr>

            @foreach (var item in Model)
            {
            <tr>
                <td>
                    <a href="@Url.Action("SuiviCommandes", "Commandes", new { Id = item.DO_Piece})"><span class="glyphicon glyphicon-eye-open" style="color : green"></span></a>
                </td>
                <td style="cursor: pointer;" onclick="location.href='@(Url.Action("SuiviCommandes", new { id = item.DO_Piece }))'">
                    @Html.DisplayFor(modelItem => item.DO_Piece)
                </td>
                <td style="cursor: pointer;" onclick="location.href='@(Url.Action("SuiviCommandes", new { id = item.DO_Piece }))'">
                    @{
                        string parameterValue = item.DO_Date.ToString().Remove(10, 9);
                    }
                    @Html.DisplayFor(modelItem => parameterValue)
                </td>
                <td style="cursor: pointer;" onclick="location.href='@(Url.Action("SuiviCommandes", new { id = item.DO_Piece }))'">
                    @{
                        string date_expe = item.DATE_EXPEDITION.ToString().Remove(10, 9);
                        if (date_expe == "01/01/1900")
                        {
                            @Html.Display("&nbsp;")
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => date_expe)
                        }
                    }

                </td>
                @*<td>
            @WebApplication6.Controllers.CommandesController.StatusCommande(Html.DisplayFor(modelItem => item.DO_Type).ToString())
                </td>*@
                <td style="cursor: pointer;" onclick="location.href='@(Url.Action("SuiviCommandes", new { id = item.DO_Piece }))'">
                    @Html.DisplayFor(modelItem => item.DO_TotalHT)
                    &euro;
                </td>
                <td>
                    <a href="@Url.Action("ExportToCSV", "ExportToCSV", new { Id = item.DO_Piece})"><span class="glyphicon glyphicon-file"></span></a>
                    <a href="@Url.Action("ExportToCSV", "ExportToCSV", new { Id = item.DO_Piece})">Export CSV</a>
                </td>
                <td>
                    <a href="@Url.Action("BonLivraisonPDF", "BonLivraisonPDF", new { Id = item.DO_Piece, target = "_blank"})"><span class="glyphicon glyphicon-file"></span></a>
                    <a href="@Url.Action("BonLivraisonPDF", "BonLivraisonPDF", new { Id = item.DO_Piece,  target = "_blank"})">Bon livraison</a>
                </td>
                <td>
                    <button type="button" class="btn btn-success btn-xs" data-toggle="modal" data-target="#commandeModal" data-dateExped="@item.DATE_EXPEDITION" data-numcommande="@item.DO_Piece" data-lientracking="@item.LIEN_TRACKING_1@item.LIEN_TRACKING_2@item.LIEN_TRACKING_3">Ajout date expédition ou lien tracking</button>              
                </td>
            </tr>
            }
        </table>
    }

    <div class="modal fade" id="commandeModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header"> 
                    <div class="modal-body">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <div class="form-group">
                            @using (Html.BeginForm("ActionAjoutTracking", "Commandes", FormMethod.Post))
                            {

                                <input type="hidden" name="numcommande" id="modal-numcommande" />

                                <label for="lientracking">Lien tracking :</label>
                                <input type="text" class="form-control" name="lientracking" id="modal-lientracking" maxlength="207" />
                                <br />
                                <label for="dateExped">Date d'expédition prévue :</label>
                                <input type="date" id="modal-dateExped" name="dateExped" style="width:10em;" class="form-control" />

                                <hr />
                                <input type="submit" style="float: right;" value="Valider" class="btn btn-success" />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <span class="text-info">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) sur @Model.PageCount</span>
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, currentFilter = ViewBag.CurrentFilter }))
</div>


<script>

    $(document).ready(function () {
        $('[data-toggle="popover"]').popover({
        })
    });

    // data-* attributes to scan when populating modal values
    var ATTRIBUTES = ['titre', 'numcommande', 'dateExped', 'lientracking'];

    $('[data-toggle="modal"]').on('click', function (e) {
        // convert target (e.g. the button) to jquery object
        var $target = $(e.target);
        // modal targeted by the button
        var modalSelector = $target.data('target');

        // iterate over each possible data-* attribute
        ATTRIBUTES.forEach(function (attributeName) {
            // retrieve the dom element corresponding to current attribute
            var $modalAttribute = $(modalSelector + ' #modal-' + attributeName);
            var dataValue = $target.data(attributeName);

            // if the attribute value is empty, $target.data() will return undefined.
            // In JS boolean expressions return operands and are not coerced into
            // booleans. That way is dataValue is undefined, the left part of the following
            // Boolean expression evaluate to false and the empty string will be returned
            $modalAttribute.text(dataValue || '');
            $modalAttribute.val(dataValue || '');
        });
    });




</script>